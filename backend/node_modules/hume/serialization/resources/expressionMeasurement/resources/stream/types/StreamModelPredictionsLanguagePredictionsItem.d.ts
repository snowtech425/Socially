/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as serializers from "../../../../../index";
import * as Hume from "../../../../../../api/index";
import * as core from "../../../../../../core";
import { TextPosition } from "./TextPosition";
import { EmotionEmbedding } from "./EmotionEmbedding";
import { Sentiment } from "./Sentiment";
import { Toxicity } from "./Toxicity";
export declare const StreamModelPredictionsLanguagePredictionsItem: core.serialization.ObjectSchema<serializers.expressionMeasurement.stream.StreamModelPredictionsLanguagePredictionsItem.Raw, Hume.expressionMeasurement.stream.StreamModelPredictionsLanguagePredictionsItem>;
export declare namespace StreamModelPredictionsLanguagePredictionsItem {
    interface Raw {
        text?: string | null;
        position?: TextPosition.Raw | null;
        emotions?: EmotionEmbedding.Raw | null;
        sentiment?: Sentiment.Raw | null;
        toxicity?: Toxicity.Raw | null;
    }
}
